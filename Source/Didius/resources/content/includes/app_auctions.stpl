<script language="JavaScript" type="text/javascript">
	app.auctions =
	{
		elements : new Array (),
						
		init : function ()
		{
			// Functions
			// -------------
			// SET
			// -------------
			var set = 		function ()
							{
								refresh ();
							};
							
			// -------------
			// REFRESH
			// -------------
			var refresh =	function ()
							{
								var onDone =	function (result)
												{													
													app.auctions.elements.auctions.addItems (result);
												};
																									
								didius.auction.list ({async: true, onDone: onDone});
							};
					
			// -------------
			// ONCHANGE
			// -------------		
			var onChange =	function ()
							{
								if (app.auctions.elements.auctions.getItem ())
		 						{		 						 				
		 							app.auctions.elements.edit.setAttribute ("disabled", false);
		 							app.auctions.elements.destroy.setAttribute ("disabled", false);
		 						}
		 						else
		 						{
		 							app.auctions.elements.edit.setAttribute ("disabled", true);
		 							app.auctions.elements.destroy.setAttribute ("disabled", true);
		 						}
							};
			
			// -------------
			// CREATE
			// -------------
			var create =	function ()
							{								
								// Create new Auction.
								var current = didius.auction.create ();																		
								didius.auction.save (current);									
								
								var row = app.auctions.elements.auctions.addItem (current);															
								var onDone =	function (result)
												{
													app.auctions.elements.auctions.setItem (result, row);
												};
																
								app.auctions.edit ({auctionId: current.id, onDone: onDone});
							};
				
			// -------------
			// EDIT
			// -------------				
			var edit =		function ()
							{	
								var row = app.auctions.elements.auctions.getItemRow ();
								var onDone = 	function (result)
												{
													app.auctions.elements.auctions.setItem (result, row);
												};																				
												
								app.auctions.edit ({auctionId: app.auctions.elements.auctions.getItem ().id, onDone: onDone});
							};
				
			// -------------
			// DESTROY
			// -------------												
			var destroy =	 function ()
							{
								var onDone =	function (result)
												{
													if (result)
													{
														app.auctions.elements.auctions.removeItem ();
													}
												};
												
								// Show dialog
								app.auctions.destroy ({auctionId: app.auctions.elements.auctions.getItem ().id, onDone: onDone});															
							};
		
			// Build UI
			app.auctions.elements = SNDK.SUI.builder.construct ({URL: "xml/auctions/section.xml", appendTo: "auctions"});
		
			// Listview: 'auctions'
			app.auctions.elements.auctions.setAttribute ("onChange", onChange);
			app.auctions.elements.auctions.setAttribute ("onDoubleClick", edit);
		
			// Buttons 'create', 'edit', 'destroy'
			app.auctions.elements.create.setAttribute ("onClick", create);
			app.auctions.elements.edit.setAttribute ("onClick", edit);
			app.auctions.elements.destroy.setAttribute ("onClick", destroy);
			
			// Fill forms
			set ();
		},
					
		edit : function (attributes)
		{																
			// Elements
			var elements = new Array ();
						
			// Functions
			// -------------
			// SET
			// -------------	
			var set =			function ()
								{						
									elements.window.setAttribute ("title", "Auktion : ["+ attributes.current.no +"]");	
										
									elements.window.getUIElement ("no").setAttribute ("value", attributes.current.no);								
									elements.window.getUIElement ("createdate").setAttribute ("value", attributes.current.createtimestamp);
									
									elements.window.getUIElement ("title").setAttribute ("value", attributes.current.title);
																								
									var onCasesDone = 	function (result)
														{													
															elements.window.getUIElement ("cases").setItems (result);
														};
									
									didius.case.list ({auction: attributes.current, async: true, onDone: onCasesDone});
									
									refreshCatalog ();
															
									elements.window.getUIElement ("notes").setAttribute ("value", attributes.current.notes);
									
									attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
							
									onChange ();						
								};
			
			// -------------
			// GET
			// -------------	
			var get =			function ()
								{		
									attributes.current.title = elements.window.getUIElement ("title").getAttribute ("value");								
									attributes.current.notes = elements.window.getUIElement ("notes").getAttribute ("value");
								};			
			
			// -------------
			// SAVE
			// -------------	
			var save =			function ()
								{
									// Disable buttons.
									elements.window.getUIElement ("save").setAttribute ("disabled", true);							
									elements.window.getUIElement ("close").setAttribute ("disabled", false);
								
									// Collect forms.
									get ();
									
									// Save Customer object to database.
									didius.auction.save (attributes.current);
																										
									// Update checksum.
									attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
									onChange ();														
									
									if (attributes.onDone)
									{
										setTimeout (function () {attributes.onDone (attributes.current)}, 1);									
									}

								};
						
			// -------------
			// CLOSE
			// -------------							
			var close = 		function ()
								{
									elements.window.dispose ();
								};
										
			// -------------
			// REFRESHCATALOG
			// -------------					
			var refreshCatalog = 	function ()
									{
										var onItemsDone = 	function (result)
															{																													
																elements.window.getUIElement ("items").setItems (result);
																onChange ();
															};
																			
										elements.window.getUIElement ("items").clear ();
										didius.item.list ({auction: attributes.current, async: true, onDone: onItemsDone});
									};
																							
			// -------------
			// ONCHANGE
			// -------------							
			var onChange =		function ()
								{							
									get ();
								
									// Main
									if ((SNDK.tools.arrayChecksum (attributes.current) != attributes.checksum))
									{									
										elements.window.getUIElement ("save").setAttribute ("disabled", false);
										elements.window.getUIElement ("close").setAttribute ("disabled", false);
									}
									else
									{
										elements.window.getUIElement ("save").setAttribute ("disabled", true);
										elements.window.getUIElement ("close").setAttribute ("disabled", false);
									}	
									
									// Cases
									if (elements.window.getUIElement ("cases").getItem ())
									{			 						 				
										elements.window.getUIElement ("caseEdit").setAttribute ("disabled", false);	
										elements.window.getUIElement ("caseDestroy").setAttribute ("disabled", false);									
									}
									else
									{
										elements.window.getUIElement ("caseEdit").setAttribute ("disabled", true);									
										elements.window.getUIElement ("caseDestroy").setAttribute ("disabled", true);									
									}																																				
									
									// Items
									if (elements.window.getUIElement ("items").getItem ())
									{			 						 				
										elements.window.getUIElement ("itemEdit").setAttribute ("disabled", false);	
										elements.window.getUIElement ("itemDestroy").setAttribute ("disabled", false);									
									}
									else
									{
										elements.window.getUIElement ("itemEdit").setAttribute ("disabled", true);									
										elements.window.getUIElement ("itemDestroy").setAttribute ("disabled", true);									
									}
																											
									// Catalog
									if (elements.window.getUIElement ("items").count () > 0)
									{
										elements.window.getUIElement ("catalogPrint").setAttribute ("disabled", false);
									}
									else
									{
										elements.window.getUIElement ("catalogPrint").setAttribute ("disabled", true);
									}
								};
						
			// -------------
			// CASECREATE
			// -------------											
			var caseCreate =	function ()
								{
									var onDone =	function (result)
													{
														if (result)
														{
															var case_ = didius.case.create (attributes.current, result);
															didius.case.save (case_);
								
															var row = elements.window.getUIElement ("cases").addItem (case_);
															var onDone =	function (result)
																			{
																				elements.window.getUIElement ("cases").setItem (result, row);
																			};
																
															app.cases.edit ({caseId: case_.id, onDone: onDone});
														}
													};
														
									didius.chooser.customer.open ({onDone: onDone});
								};								
					
			// -------------
			// CASEEDIT
			// -------------												
			var caseEdit =	function ()
								{
									var row = elements.window.getUIElement ("cases").getItemRow ()
									var onDone = 	function (result)
													{
														if (result)
														{
															elements.window.getUIElement ("cases").setItem (result, row);
														}
													};																				
												
									app.cases.edit ({caseId: elements.window.getUIElement ("cases").getItem ().id, onDone: onDone});
								};
		
			// -------------
			// CASEDESTROY
			// -------------	
			var caseDestroy =	function ()
								{
									var onDone =	function (result)
													{
														if (result)
														{
															elements.window.getUIElement ("cases").removeItem ();
														}
													};
								
									app.cases.destroy ({caseId: elements.window.getUIElement ("cases").getItem ().id, onDone: onDone});
								};
						
			// -------------
			// ITEMEDIT
			// -------------											
			var itemEdit = 		function ()
								{
								
								};
				
			// -------------
			// ITEMDESTROY
			// -------------													
			var itemDestroy = 	function ()
								{
								
								};
								
			// -------------
			// CATALOGPRINT
			// -------------													
			var catalogPrint = 	function ()
								{
								
								};
			
				
			// -------------
			// INIT
			// -------------																																																																							
			var init = 			function ()
								{
									if (!attributes)
										attributes = new Array ();
										
									// Poplulate current
									try
									{
										attributes.current = didius.auction.load (attributes.auctionId);
									}
									catch (exception)
									{
										app.error ({exception: exception});
										return;
									}					
														
									// Window 'window'												
									elements.window = new SNDK.SUI.modal.window ({UIURL: "xml/auctions/edit.xml", width: "80%", height: "80%"});
									
									// Buttons 'caseCreate', 'caseEdit', 'caseDestory', 'itemEdit', 'itemDestory', 'catalogPrint'
									elements.window.getUIElement ("caseCreate").setAttribute ("onClick", caseCreate);
									elements.window.getUIElement ("caseEdit").setAttribute ("onClick", caseEdit);								
									elements.window.getUIElement ("caseDestroy").setAttribute ("onClick", caseDestroy);	
																										
									elements.window.getUIElement ("itemEdit").setAttribute ("onClick", itemEdit);
									elements.window.getUIElement ("itemDestroy").setAttribute ("onClick", itemDestroy);	
									
									elements.window.getUIElement ("catalogPrint").setAttribute ("onClick", catalogPrint);	
									
									// Listview 'cases', 'items'									
									elements.window.getUIElement ("cases").setAttribute ("onChange", onChange);
									elements.window.getUIElement ("cases").setAttribute ("onDoubleClick", caseEdit);
																		
									elements.window.getUIElement ("items").setAttribute ("onChange", onChange);
									elements.window.getUIElement ("items").setAttribute ("onDoubleClick", itemEdit);
									
									// Textbox 'title'
									elements.window.getUIElement ("title").setAttribute ("onChange", onChange);
									
									// Textarea 'notes'
									elements.window.getUIElement ("notes").setAttribute ("onChange", onChange);
		
									// Button 'save', 'close'
									elements.window.getUIElement ("save").setAttribute ("onClick", save);
									elements.window.getUIElement ("close").setAttribute ("onClick", close);
																																			
									// Fill forms.
									set ();
							
									// Open modal window.															
									elements.window.open ();															
							};
						
			// Initialize window
			init ();				
		},
		
		destroy : function (attributes)
		{
			var onDone =	function (result)
							{
								var success = true;
							
								if (result == 1)
								{
									try
									{
										didius.auction.destroy (attributes.auctionId);
									}
									catch (error)
									{
										success = false;
										app.error ({exception: error})												
									}																			
								}
								else
								{
									success = false;
								}
								
								if (attributes.onDone != null)
								{
									setTimeout (function () {attributes.onDone (success)});
								}			
							};
									
			// Show dialog
			SNDK.SUI.modal.dialog.confirm.show ({text: "Er du sikker på du vil slette denne auktion ?", buttonLabel1: "Ja", buttonLabel2: "Nej", onDone: onDone});
		}		
	}
</script>
