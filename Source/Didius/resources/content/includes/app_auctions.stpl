<script language="JavaScript" type="text/javascript">
	app.auctions =
	{
		elements : new Array (),
						
		init : function ()
		{
			// Functions
			var set = 		function ()
							{
								refresh ();
							};
							
			var refresh =	function ()
							{
								var onDone =	function (result)
												{													
													app.auctions.elements.auctions.addItems (result);
												};
																									
								didius.auction.list ({async: true, onDone: onDone});
							};
							
			var onChange =	function ()
							{
								if (app.auctions.elements.auctions.getItem ())
		 						{		 						 				
		 							app.auctions.elements.edit.setAttribute ("disabled", false);
		 							app.auctions.elements.destroy.setAttribute ("disabled", false);
		 						}
		 						else
		 						{
		 							app.auctions.elements.edit.setAttribute ("disabled", true);
		 							app.auctions.elements.destroy.setAttribute ("disabled", true);
		 						}
							};
			
			var onCreate =	function ()
							{
								// Create new Auction.
								var current = didius.auction.create ();																		
								didius.auction.save (current);									
								
								var row = app.auctions.elements.auctions.addItem (current);															
								var onSave =	function (result)
												{
													app.auctions.elements.auctions.setItem (result, row);
												};
																
								app.auctions.edit ({current: current, onSave: onSave});
							};
								
			var onEdit =	function ()
							{	
								var row = app.auctions.elements.auctions.getItemRow ();
								var onSave = 	function (result)
												{
													app.auctions.elements.auctions.setItem (result, row);
												};																				
												
								app.auctions.edit ({current: didius.auction.load (app.auctions.elements.auctions.getItem ().id), onSave: onSave});
							};
																
			var onDestroy = function ()
							{
								var onDone =	function (result)
												{
													if (result == 1)
													{
														// Delete customer
														var result = didius.auction.destroy (app.auctions.elements.auctions.getItem ().id);
																		
														// Check if any errors occured												
														if (result[0])
														{
															app.auctions.elements.auctions.removeItem ();
														}
														else
														{	
															var text = "Der er opstået en ukendt fejl under sletning af auktionen.";
															
															switch (result[1][0])
															{
																case "00530":
																{
																	text = "Kunne ikke finde auktion der skulle slettes, prøv igen.";	
																	break;																
																}
																
																case "00531":
																{
																	text = "Kan ikke slette auktion da denne har tilknyttet sager. Slet sagerne og forsøg igen.";
																	break;
																}
															}
																															
															// Display error alert
															SNDK.SUI.modal.dialog.alert.show ({text: text, buttonLabel: "Ok"});
														}
													}
												};
												
								// Show dialog
								SNDK.SUI.modal.dialog.confirm.show ({text: "Er du sikker på du vil slette denne auktion ?", buttonLabel1: "Ja", buttonLabel2: "Nej", onDone: onDone});
							};
		
			// Build UI
			app.auctions.elements = SNDK.SUI.builder.construct ({URL: "xml/auctions/section.xml", appendTo: "auctions"});
		
			// Listview: 'auctions'
			app.auctions.elements.auctions.setAttribute ("onChange", onChange);
			app.auctions.elements.auctions.setAttribute ("onDoubleClick",onEdit);
		
			// Buttons 'create', 'edit', 'destroy'
			app.auctions.elements.create.setAttribute ("onClick", onCreate);
			app.auctions.elements.edit.setAttribute ("onClick", onEdit);
			app.auctions.elements.destroy.setAttribute ("onClick", onDestroy);
			
			// Fill forms
			set ();
		},
					
		edit : function (attributes)
		{																
			// Elements
			var elements = new Array ();
						
			// Functions
			var save =			function ()
								{
									// Collect forms.
									get ();
									
									// Save Customer object to database.
									didius.auction.save (attributes.current);
									
									// Refresh listview in main section.
									if (attributes.onSave)
									{
										setTimeout (function () {attributes.onSave (attributes.current)}, 1);									
									}
									
									// Update checksum.
									attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
									onChange ();														
								};
						
			var close = 		function ()
								{
									elements.window.dispose ();
								};
								
			var set =			function ()
								{							
									elements.window.getUIElement ("no").setAttribute ("value", attributes.current.no);								
									elements.window.getUIElement ("createdate").setAttribute ("value", attributes.current.createtimestamp);
									
									elements.window.getUIElement ("title").setAttribute ("value", attributes.current.title);
																								
									var onCasesDone = 	function (result)
														{													
															elements.window.getUIElement ("cases").setItems (result);
														};
									
									didius.case.list ({auction: attributes.current, async: true, onDone: onCasesDone});
									
									var onItemsDone = 	function (result)
														{													
															elements.window.getUIElement ("items").setItems (result);
														};
									
									didius.item.list ({auction: attributes.current, async: true, onDone: onItemsDone});
															
									elements.window.getUIElement ("notes").setAttribute ("value", attributes.current.notes);
									
									attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
							
									onChange ();						
								};
						
			var get =			function ()
								{		
									attributes.current.title = elements.window.getUIElement ("title").getAttribute ("value");								
									attributes.current.notes = elements.window.getUIElement ("notes").getAttribute ("value");
								};
									
			var onChange =		function ()
								{							
									get ();
								
									// Checksum & name not empty.
									if ((SNDK.tools.arrayChecksum (attributes.current) != attributes.checksum))
									{									
										elements.window.getUIElement ("save").setAttribute ("disabled", false);
									}
									else
									{
										elements.window.getUIElement ("save").setAttribute ("disabled", true);
									}	
									
									if (elements.window.getUIElement ("cases").getItem ())
									{			 						 				
										elements.window.getUIElement ("caseEdit").setAttribute ("disabled", false);	
										elements.window.getUIElement ("caseDestroy").setAttribute ("disabled", false);									
									}
									else
									{
										elements.window.getUIElement ("caseEdit").setAttribute ("disabled", true);									
										elements.window.getUIElement ("caseDestroy").setAttribute ("disabled", true);									
									}																																				
								};
								
			var onCaseCreate =	function ()
								{
									var onDone =	function (result)
													{
														if (result)
														{
															var case_ = didius.case.create (attributes.current, result);
															didius.case.save (case_);
								
															var row = elements.window.getUIElement ("cases").addItem (case_);
															var onDone =	function (result)
																			{
																				elements.window.getUIElement ("cases").setItem (result, row);
																			};
																
															app.cases.edit ({current: case_, onDone: onDone});
														}
													};
														
									didius.chooser.customer.open ({onDone: onDone});
								};								
								
			var onCaseEdit =	function ()
								{
									var row = elements.window.getUIElement ("cases").getItemRow ()
									var onDone = 	function (result)
													{
														if (result == 1)
														{
															elements.window.getUIElement ("cases").setItem (result, row);
														}
													};																				
												
									app.cases.edit ({current: didius.case.load (elements.window.getUIElement ("cases").getItem ().id), onDone: onDone});
								};
		
			var onCaseDestroy =	function ()
								{
									var onDone =	function (result)
													{
														if (result == 1)
														{
															elements.window.getUIElement ("cases").removeItem ();
														}
													};
								
									app.cases.destroy ({current: didius.case.load (elements.window.getUIElement ("cases").getItem ().id), onDone: onDone});
								};
								
			var onItemEdit = 	function ()
								{
								
								};
								
			var onItemDestroy = function ()
								{
								
								};
																																					
			var init = 			function ()
								{
									if (!attributes)
										attributes = new Array ();
																										
									// Functions
														
									// Window 'window'			
									attributes.windowTitle = "Auktion : ["+ attributes.current.no +"]";	
									elements.window = new SNDK.SUI.modal.window ({title: attributes.windowTitle, UIURL: "xml/auctions/edit.xml", width: "80%", height: "80%"});
									
									// Buttons 'caseEdit', 'caseCreate'
									elements.window.getUIElement ("caseCreate").setAttribute ("onClick", onCaseCreate);
									elements.window.getUIElement ("caseEdit").setAttribute ("onClick", onCaseEdit);								
									elements.window.getUIElement ("caseDestroy").setAttribute ("onClick", onCaseDestroy);	
									
									// Listview 'cases', 'items'
									elements.window.getUIElement ("cases").setAttribute ("onDoubleClick", onCaseEdit);
									elements.window.getUIElement ("cases").setAttribute ("onChange", onChange);
									
									//elements.window.getUIElement ("items").setAttribute ("onDoubleClick", onCaseEdit);
									elements.window.getUIElement ("items").setAttribute ("onChange", onChange);
									
									// Textbox 'title'
									elements.window.getUIElement ("title").setAttribute ("onChange", onChange);
									
									// Textarea 'notes'
									elements.window.getUIElement ("notes").setAttribute ("onChange", onChange);
		
									// Button 'save', 'close'
									elements.window.getUIElement ("save").setAttribute ("onClick", save);
									elements.window.getUIElement ("close").setAttribute ("onClick", close);
																										
									// Init elements.
									//SNDK.SUI.init ();
									
									// Fill forms.
									set ();
							
									// Open modal window.															
									elements.window.open ();															
							};
						
			// Initialize window
			init ();				
		}		
	}
</script>
