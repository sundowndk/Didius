<script language="JavaScript" type="text/javascript">
	app.customers =
	{
		elements : new Array (),
						
		init : function ()
		{
			// Functions
			var set = 		function ()
							{
								refresh ();
							};
							
			var refresh =	function ()
							{
								var onDone =	function (result)
												{													
													app.customers.elements.customers.addItems (result);
												};
																									
								didius.customer.list ({async: true, onDone: onDone});
							};
							
			var onChange =	function ()
							{
								if (app.customers.elements.customers.getItem ())
		 						{		 						 				
		 							app.customers.elements.edit.setAttribute ("disabled", false);
		 							app.customers.elements.destroy.setAttribute ("disabled", false);
		 						}
		 						else
		 						{
		 							app.customers.elements.edit.setAttribute ("disabled", true);
		 							app.customers.elements.destroy.setAttribute ("disabled", true);
		 						}
							};
			
			var onCreate =	function ()
							{
								// Create new Customer, and give it a genric name
								var current = didius.customer.create ();			
								current.name = "Unavngiven kunde";
								didius.customer.save (current);											
								
								var row = app.customers.elements.customers.addItem (current);															
								var onDone =	function (result)
												{
													app.customers.elements.customers.setItem (result, row);
												};
																
								app.customers.edit ({customerId: current.id, onDone: onDone});
							};
								
			var onEdit =	function ()
							{	
								var row = app.customers.elements.customers.getItemRow ();
								var onDone = 	function (result)
												{
													app.customers.elements.customers.setItem (result, row);
												};																				
												
								app.customers.edit ({customerId: app.customers.elements.customers.getItem ().id , onDone: onDone});
							};
						
			var onDestroy = function ()
							{
								var onDone =	function (result)
												{
													if (result)
													{
														app.customers.elements.customers.removeItem ();
													}
												};
												
								// Show dialog
								app.customer.destroy ({customerId: app.customers.elements.customers.getItem ().id, onDone: onDone});
							};
		
			// Build UI
			app.customers.elements = SNDK.SUI.builder.construct ({URL: "xml/customers/section.xml", appendTo: "customers"});
		
			// Listview: 'customers'
			app.customers.elements.customers.setAttribute ("onChange", onChange);
			app.customers.elements.customers.setAttribute ("onDoubleClick",onEdit);
		
			// Buttons 'create', 'edit', 'destroy'
			app.customers.elements.create.setAttribute ("onClick", onCreate);
			app.customers.elements.edit.setAttribute ("onClick", onEdit);
			app.customers.elements.destroy.setAttribute ("onClick", onDestroy);
			
			// Fill forms
			set ();
		},
					
		edit : function (attributes)
		{																
			// Elements
			var elements = new Array ();
						
			// Functions
			var save =		function ()
							{															
								// Disable buttons.
								elements.window.getUIElement ("save").setAttribute ("disabled", true);							
								elements.window.getUIElement ("close").setAttribute ("disabled", false);
							
								// Collect forms.
								get ();															
								
								// Save Customer object to database.
								didius.customer.save (attributes.current);																
								
								// Update checksum.
								attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
								onChange ();														
								
								// Performe callback.								
								if (attributes.onDone)
								{
									setTimeout (function () {attributes.onDone (attributes.current)}, 1);									
								}
							};
						
			var close = 	function ()
							{
								elements.window.dispose ();
							};
								
			var set =		function ()
							{				
								attributes.current = didius.customer.load (attributes.customerId);
								
								//elements.window.setAttribute ("title", "Kunde : ["+ attributes.current.no +"]");								
													
								elements.window.getUIElement ("no").setAttribute ("value", attributes.current.no);								
								elements.window.getUIElement ("createdate").setAttribute ("value", attributes.current.createtimestamp);
							
								elements.window.getUIElement ("name").setAttribute ("value", attributes.current.name);
								elements.window.getUIElement ("att").setAttribute ("value", attributes.current.att);
								elements.window.getUIElement ("address1").setAttribute ("value", attributes.current.address1);
								elements.window.getUIElement ("address2").setAttribute ("value", attributes.current.address2);
								elements.window.getUIElement ("postcode").setAttribute ("value", attributes.current.postcode);
								elements.window.getUIElement ("city").setAttribute ("value", attributes.current.city);
								elements.window.getUIElement ("country").setAttribute ("value", attributes.current.country);
								
								elements.window.getUIElement ("phone").setAttribute ("value", attributes.current.phone);
								elements.window.getUIElement ("mobile").setAttribute ("value", attributes.current.mobile);
								elements.window.getUIElement ("email").setAttribute ("value", attributes.current.email);
																
								elements.window.getUIElement ("vat").setAttribute ("value", attributes.current.vat);
								elements.window.getUIElement ("vatno").setAttribute ("value", attributes.current.vatno);
								elements.window.getUIElement ("bankname").setAttribute ("value", attributes.current.bankname);
								elements.window.getUIElement ("bankregistrationno").setAttribute ("value", attributes.current.bankregistrationno);
								elements.window.getUIElement ("bankaccountno").setAttribute ("value", attributes.current.bankaccountno);
								
								var onCasesDone = 	function (result)
													{													
														elements.window.getUIElement ("cases").setItems (result);
													};
								
								didius.case.list ({customer: attributes.current, async: true, onDone: onCasesDone});
								
								elements.window.getUIElement ("notes").setAttribute ("value", attributes.current.notes);
							
								attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
						
								onChange ();						
							};
						
			var get =		function ()
							{												
								attributes.current.name = elements.window.getUIElement ("name").getAttribute ("value");
								attributes.current.att = elements.window.getUIElement ("att").getAttribute ("value");
								attributes.current.address1 = elements.window.getUIElement ("address1").getAttribute ("value");
								attributes.current.address2 = elements.window.getUIElement ("address2").getAttribute ("value");
								attributes.current.postcode = elements.window.getUIElement ("postcode").getAttribute ("value");
								attributes.current.city = elements.window.getUIElement ("city").getAttribute ("value");
								attributes.current.country = elements.window.getUIElement ("country").getAttribute ("value");															
								
								attributes.current.phone = elements.window.getUIElement ("phone").getAttribute ("value");
								attributes.current.mobile = elements.window.getUIElement ("mobile").getAttribute ("value");
								attributes.current.email = elements.window.getUIElement ("email").getAttribute ("value");
								
								attributes.current.vat = elements.window.getUIElement ("vat").getAttribute ("value");								
								attributes.current.vatno = elements.window.getUIElement ("vatno").getAttribute ("value");
								attributes.current.bankname = elements.window.getUIElement ("bankname").getAttribute ("value");
								attributes.current.bankregistrationno = elements.window.getUIElement ("bankregistrationno").getAttribute ("value");
								attributes.current.bankaccountno = elements.window.getUIElement ("bankaccountno").getAttribute ("value");
								
								attributes.current.notes = elements.window.getUIElement ("notes").getAttribute ("value");
							};
									
			var onChange =	function ()
							{							
								get ();
							
								// Checksum & name not empty.
								if ((SNDK.tools.arrayChecksum (attributes.current) != attributes.checksum) && (elements.window.getUIElement ("name").getAttribute ("value") != ""))
								{									
									elements.window.getUIElement ("save").setAttribute ("disabled", false);
									elements.window.getUIElement ("close").setAttribute ("disabled", false);
								}
								else
								{
									elements.window.getUIElement ("save").setAttribute ("disabled", true);
									elements.window.getUIElement ("close").setAttribute ("disabled", false);
								}	
								
								if (elements.window.getUIElement ("cases").getItem ())
								{			 						 				
									elements.window.getUIElement ("caseEdit").setAttribute ("disabled", false);
									elements.window.getUIElement ("caseDestroy").setAttribute ("disabled", false);
								}
								else
								{
									elements.window.getUIElement ("caseEdit").setAttribute ("disabled", true);
									elements.window.getUIElement ("caseDestroy").setAttribute ("disabled", true);
								}																																				
							};

			var onCaseEdit =	function ()
								{
									var row = elements.window.getUIElement ("cases").getItemRow ()
									var onDone = 	function (result)
													{
														elements.window.getUIElement ("cases").setItem (result, row);
													};																				
												
									app.cases.edit ({caseId: elements.window.getUIElement ("cases").getItem ().id, onDone: onDone});																								
								};
								
			var onCaseDestroy = function ()
								{
									var onDone =	function (result)
													{
														if (result)
														{
															elements.window.getUIElement ("cases").removeItem ();
														}
													};
																
									app.cases.destroy ({caseId: elements.window.getUIElement ("cases").getItem ().id, onDone: onDone});
								};									
																														
			var init = 		function ()
							{
								if (!attributes)
									attributes = new Array ();
																																														
								// Window 'window'											
								elements.window = new SNDK.SUI.modal.window ({UIURL: "xml/customers/edit.xml", width: "80%", height: "80%"});
								
								// Buttons 'caseEdit', 'caseDestroy'
								elements.window.getUIElement ("caseEdit").setAttribute ("onClick", onCaseEdit);
								elements.window.getUIElement ("caseDestroy").setAttribute ("onClick", onCaseDestroy);
								
								// Listview 'cases'								
								elements.window.getUIElement ("cases").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("cases").setAttribute ("onDoubleClick", onCaseEdit);
								
								// Textbox 'name', 'att', 'address1', 'address2', 'postcode', 'city', 'country', 'phone', 'mobile', 'email', 'vat', 'vatno', 'bankname', 'bankregistrationno', 'bankaccountno'
								elements.window.getUIElement ("name").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("att").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("address1").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("address2").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("postcode").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("city").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("country").setAttribute ("onChange", onChange);
								
								elements.window.getUIElement ("phone").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("mobile").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("email").setAttribute ("onChange", onChange);
								
								elements.window.getUIElement ("vat").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("vatno").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("bankname").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("bankregistrationno").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("bankaccountno").setAttribute ("onChange", onChange);
																								
								// Textarea 'notes'
								elements.window.getUIElement ("notes").setAttribute ("onChange", onChange);
	
								// Button 'save', 'close'
								elements.window.getUIElement ("save").setAttribute ("onClick", save);
								elements.window.getUIElement ("close").setAttribute ("onClick", close);
																																	
								// Fill forms.
								set ();
						
								// Open modal window.															
								elements.window.open ();															
						};
						
			// Initialize window
			init ();				
		},
		
		destroy : function (attributes)
		{
			var onDone =	function (result)
							{
								if (result == 1)
								{
									// Delete customer
									var result = didius.customer.destroy (attributes.customerId);
													
									// Check if any errors occured												
									if (!result[0])
									{	
										var text = "Der er opstået en ukendt fejl under sletning af kunden.";
										
										switch (result[1][0])
										{
											case "00130":
											{
												text = "Kunne ikke finde kunden der skulle slettes, prøv igen.";	
												break;																
											}
											
											case "00131":
											{
												text = "Kan ikke slette kunden da denne har tilknyttet sager. Slet sagerne og forsøg igen.";
												break;
											}
										}
																										
										// Display error alert
										SNDK.SUI.modal.dialog.alert.show ({text: text, buttonLabel: "Ok"});
										
										if (attributes.onDone != null)
										{
											setTimeout (function () {attributes.onDone (false)});
										}
									}
									else
									{
										if (attributes.onDone != null)
										{
											setTimeout (function () {attributes.onDone (true)});
										}
									
									}
								}
							};
									
			// Show dialog
			SNDK.SUI.modal.dialog.confirm.show ({text: "Er du sikker på du vil slette denne kunde ?", buttonLabel1: "Ja", buttonLabel2: "Nej", onDone: onDone});
		}	
	}
</script>