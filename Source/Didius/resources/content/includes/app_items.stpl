<script language="JavaScript" type="text/javascript">
	app.items =
	{
		edit : function (attributes)
		{
			// Elements
			var elements = new Array ();
							
			// Functions					
			// -------------
			// SET
			// -------------											
			var set =		function ()
							{			
								elements.window.setAttribute ("title" , "Effekt : ["+ attributes.current.no +"]");	
																																	
								elements.window.getUIElement ("no").setAttribute ("value", attributes.current.no);								
								elements.window.getUIElement ("createdate").setAttribute ("value", attributes.current.createtimestamp);
								
								elements.window.getUIElement ("catalogno").setAttribute ("value", attributes.current.catalogno);
								elements.window.getUIElement ("title").setAttribute ("value", attributes.current.title);
								elements.window.getUIElement ("description").setAttribute ("value", attributes.current.description);
								
								attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
							
								onChange ();						
							};
				
			// -------------
			// GET
			// -------------										
			var get =		function ()
							{			
								attributes.current.catalogno = elements.window.getUIElement ("catalogno").getAttribute ("value");
								attributes.current.title = elements.window.getUIElement ("title").getAttribute ("value");
								attributes.current.description = elements.window.getUIElement ("description").getAttribute ("value");																		
							};			
			
			// -------------
			// SAVE
			// -------------
			var save =		function ()
							{		
								// Disable buttons
								elements.window.getUIElement ("save").setAttribute ("disabled", true);
								elements.window.getUIElement ("close").setAttribute ("disabled", true);
										
								// Verifty CatalogNo if it was changed.
								if (attributes.temp.catalogNo != attributes.current.catalogno)
								{								
									var test = didius.helpers.isCatalogNoTaken ({auction: didius.auction.load (didius.case.load (attributes.current.caseid).auctionid), catalogNo: elements.window.getUIElement ("catalogno").getAttribute ("value")});
										
									if (test)
									{
										SNDK.SUI.modal.dialog.alert.show ({text: "Det angivet katalog nummer er i brug. Systemmet har derfor fundet det laveste ubrugte katalog nummer og angivet dette i stedet.", buttonLabel: "Ok"});
										
										elements.window.getUIElement ("catalogno").setAttribute ("value", didius.helpers.newCatalogNo ({auction: didius.auction.load (didius.case.load (attributes.current.caseid).auctionid)}));
									}								
								}
								
								// Collect forms.
								get ();
									
								// Save Customer object to database.
								didius.item.save (attributes.current);
																										
								// Update checksum.
								attributes.checksum = SNDK.tools.arrayChecksum (attributes.current);
								onChange ();
								
								if (attributes.onDone)
								{
									setTimeout (function () {attributes.onDone (attributes.current)}, 1);
								}
							};
				
			// -------------
			// CLOSE
			// -------------										
			var close = 	function ()
							{
								elements.window.dispose ();
							};
				
			// -------------
			// ONCHANGE
			// -------------																																														
			var onChange =	function ()
							{
								get ();
								
								// Main
								if ((SNDK.tools.arrayChecksum (attributes.current) != attributes.checksum))
								{
									elements.window.getUIElement ("save").setAttribute ("disabled", false);
									elements.window.getUIElement ("close").setAttribute ("disabled", false);
								}
								else
								{
									elements.window.getUIElement ("save").setAttribute ("disabled", true);
									elements.window.getUIElement ("close").setAttribute ("disabled", false);
								}															
							};						
											
			// -------------
			// INIT
			// -------------																					
			var init = 		function ()
							{
								if (!attributes)
									attributes = new Array ();
												
								if (!attributes.temp)
									attributes.temp = new Array ();
									
								// Poplulate current
								try
								{
									attributes.current = didius.item.load (attributes.itemId);
								}
								catch (exception)
								{
									app.error ({exception: exception});
									return;
								}														
									
								attributes.temp.catalogNo = attributes.current.catalogno;

								// Window 'window'											
								elements.window = new SNDK.SUI.modal.window ({title: attributes.windowTitle, UIURL: "xml/items/edit.xml", width: "60%", height: "60%"});
								
								// Textbox 'title', 'catalogno'
								elements.window.getUIElement ("catalogno").setAttribute ("onChange", onChange);
								elements.window.getUIElement ("title").setAttribute ("onChange", onChange);
								
								// Textarea 'description'
								elements.window.getUIElement ("description").setAttribute ("onChange", onChange);
								
								// Button 'save', 'close'
								elements.window.getUIElement ("save").setAttribute ("onClick", save);
								elements.window.getUIElement ("close").setAttribute ("onClick", close);
																									
								// Init elements.
								//SNDK.SUI.init ();
								
								// Fill forms.
								set ();															
						
								// Open modal window.															
								elements.window.open ();															
						};
							
			// Initialize window
			init ();					
		},
		
		destroy : function (attributes)
		{
			var onDone =	function (result)
							{
								if (result == 1)
								{										
									var success = true;
																						
									// Delete case								
									try
									{
										didius.item.destroy (attributes.itemId);												
									}
									catch (exception)
									{
										success = false;
										app.error ({exception: exception});
									}																																									
								}
								else
								{
									success = false;
								}
								
								if (!attributes.onDone != null)
								{
									setTimeout (function () {attributes.onDone (success)});
								}
							};		
							
			SNDK.SUI.modal.dialog.confirm.show ({text: "Er du sikker p√• du vil slette denne effekt ?", buttonLabel1: "Ja", buttonLabel2: "Nej", onDone: onDone});
		}
	}
</script>
